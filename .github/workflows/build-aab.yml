name: Build AAB

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # ðŸ§¹ Clean Gradle caches that may contain stale Kotlin metadata
      - name: Clean Gradle caches
        run: |
          rm -rf ~/.gradle/caches/build-cache
          rm -rf ~/.gradle/caches/journal-1
          rm -rf ~/.gradle/caches/transforms-3
          rm -rf ~/.gradle/daemon/
          rm -rf ~/.gradle/native/

      # âš¡ Cache only Gradle dependency jars (safe & fast)
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/modules-2/files-2.1
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Create google-services.json
        run: |
          cat <<EOF > app/google-services.json
          ${{ secrets.GOOGLE_SERVICES_JSON }}
          EOF

      # ðŸ§± Force a full clean build to avoid stale bytecode
      - name: Clean & Build AAB
        run: ./gradlew clean bundleRelease --stacktrace --no-daemon

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/bundle/release/app-release.aab
