name: Build & Sign APK + AAB

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3Ô∏è‚É£ Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 4Ô∏è‚É£ Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 5Ô∏è‚É£ Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # 6Ô∏è‚É£ Create .env file with APP_SECRET_KEY
      - name: Create .env file
        run: |
          cat <<EOF > .env
          APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }}
          EOF

      # 7Ô∏è‚É£ Create google-services.json from secret
      - name: Create google-services.json
        run: |
          cat <<EOF > app/google-services.json
          ${{ secrets.GOOGLE_SERVICES_JSON }}
          EOF

      # 8Ô∏è‚É£ Decode Base64 Keystore Secret
      - name: Decode and save keystore
        run: |
          mkdir -p $HOME/app
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > $HOME/app/my-release-key.jks

      # 9Ô∏è‚É£ Build Signed Release APK
      - name: Build Signed Release APK
        run: |
          ./gradlew clean assembleRelease \
            -Pandroid.injected.signing.store.file=$HOME/app/my-release-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      # üîü Upload Signed APK
      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/app-release.apk

      # 11Ô∏è‚É£ Build Signed Release AAB
      - name: Build Signed Release AAB
        run: |
          ./gradlew clean bundleRelease \
            -Pandroid.injected.signing.store.file=$HOME/app/my-release-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      # 12Ô∏è‚É£ Upload Signed AAB
      - name: Upload Signed AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/app-release.aab

     
    
